#lang racket/base

(define-syntax-rule (definep id val)
  (begin
  (provide id)
  (define  id val)))

(definep SSH_MSG_DISCONNECT                       1) 
(definep SSH_MSG_IGNORE                           2) 
(definep SSH_MSG_UNIMPLEMENTED                    3) 
(definep SSH_MSG_DEBUG                            4) 
(definep SSH_MSG_SERVICE_REQUEST                  5) 
(definep SSH_MSG_SERVICE_ACCEPT                   6) 
(definep SSH_MSG_KEXINIT                         20) 
(definep SSH_MSG_NEWKEYS                         21) 
(definep KEXDH_INIT                              30) 
(definep KEXDH_REPLY                             31) 
(definep KEXDH_GEX_GROUP                         31)
(definep KEXDH_GEX_INIT                          32)
(definep KEXDH_GEX_REPLY                         33)
(definep KEXDH_GEX_REQUEST                       34)
(definep SSH_MSG_USERAUTH_REQUEST                50) 
(definep SSH_MSG_USERAUTH_FAILURE                51) 
(definep SSH_MSG_USERAUTH_SUCCESS                52) 
(definep SSH_MSG_USERAUTH_BANNER                 53) 
(definep SSH_MSG_USERAUTH_PK_OK                  60)
(definep SSH_MSG_GLOBAL_REQUEST                  80) 
(definep SSH_MSG_REQUEST_SUCCESS                 81) 
(definep SSH_MSG_REQUEST_FAILURE                 82) 
(definep SSH_MSG_CHANNEL_OPEN                    90) 
(definep SSH_MSG_CHANNEL_OPEN_CONFIRMATION       91) 
(definep SSH_MSG_CHANNEL_OPEN_FAILURE            92) 
(definep SSH_MSG_CHANNEL_WINDOW_ADJUST           93) 
(definep SSH_MSG_CHANNEL_DATA                    94) 
(definep SSH_MSG_CHANNEL_EXTENDED_DATA           95) 
(definep SSH_MSG_CHANNEL_EOF                     96) 
(definep SSH_MSG_CHANNEL_CLOSE                   97) 
(definep SSH_MSG_CHANNEL_REQUEST                 98) 
(definep SSH_MSG_CHANNEL_SUCCESS                 99) 
(definep SSH_MSG_CHANNEL_FAILURE                100) 
